---
layout: post
title: 谈光照图烘焙技巧
subtitle: 已入TA的坑
date: 2017-05-03 12:00:00
author: 弗洛姆
header-img: "img/in-post/default-bg.jpg"
tags:
    - 图形技术
---


# LightMap烘焙技巧
> 前言：弱弱的说我是一个程序猿。另外求粉求赞~[知乎链接](https://www.zhihu.com/question/38140464/answer/164860198)  

> 科普名词解释：  
> 全局照明（GI）：是指除了直接光之外包括天空，物件之间间接光照的总和。  
> 环境光遮蔽（AO）：是指间接光在物件间相互遮挡反射不充分导致的微弱阴影。通常在直接光照暗部的接缝处才会比较明显。  
> 天光：从头顶来的天空颜色造成的间接照明，特别是在晴朗的天气。  
> LightMap：光照贴图  
> HDR：颜色高动态区间，指颜色亮度可以超过1，移动平台暂且不支持。  
> 间接照明（间接反射）：指光源照亮A物体，A物体变亮以后充当间接光源对近距离内B物体有照亮的作用。这种现象只有当物体B在直接光照（比如阳光）的阴影里才会明显。


## 足够多的明暗对比
- **适当**打平灯光以增加阴影面积（暗部更多更容易做效果）    
    ![img](/img/in-post/talk-bake-in-unity/flat-sun-direction.jpg)
    
    
- **适当**增大模型增加阴影面积（暗部更多更容易做效果）  
    ![img](/img/in-post/talk-bake-in-unity/bigger-object.jpg)
    
    
- 通过**只投射不接收**来增加假阴影（作假）（不接受投影是因为看不见所以可以节省这种物体的渲染和它占用的litmap面积）  
    ![img](/img/in-post/talk-bake-in-unity/only-cast-object.jpg)
    
    
## 模拟全局光照
- 足够**充分**的**暗部**照明（暗部会有一种明快的感觉，用美术语言说就是暗部很“通透”）  
    ![img](/img/in-post/talk-bake-in-unity/lighter-in-shadow.jpg)
    
    ![img](/img/in-post/talk-bake-in-unity/lighter-in-shadow-lm.jpg)
    
    
- 天光的使用：
    - 理论上越晴朗的天气阴影暗部越偏蓝（这就是全局照明的一种，暗部要有光，用美术语言说就是暗部很“通透”）(哪天北京晴空万里的时候去大楼的阴影里看看是不是有蓝色，为了对比饱和度的覆盖问题，可以拿一张白纸)  
    ![img](/img/in-post/talk-bake-in-unity/sky-light.jpg)
    
    
- 对**间接反射**的**夸张**：
    - 比如守望先锋花村的樱花树下会有很强烈的蓝紫色，实际上是模拟粉红的樱花与天光蓝色的叠加造成的视觉，不过暴雪的美术有更加夸张的表达。（实现方法实际是在暗部增加与区域环境颜色相似的点光，实时GI现在效率跟不上，另外也不可能这么强。）
    - 小幅**夸张**：  
    ![img](/img/in-post/talk-bake-in-unity/indirect-ref-in-shadow-2.jpg)
    
    - **更夸张**的做法：现实世界中不会有这么强烈的间接反射，就像叶子把光间接反射出来了一样，守望先锋就是例子  
    ![img](/img/in-post/talk-bake-in-unity/indirect-ref-in-shadow.jpg)
    
- 其实以上技巧都是借鉴自守望先锋
    - 这是一个人的分析，只要**有心去找，仔细去看，去思考**，网上有很多文章有可以借鉴的地方（因为实时GI还开销太大，暴雪真是能通过技巧把能用的东西用到最好）  
    ![img](/img/in-post/talk-bake-in-unity/ow-bake.jpg)
    [原文链接](https://zhuanlan.zhihu.com/p/22689841)
    
    - 还有一个对**环境光源**的理解  
    ![img](/img/in-post/talk-bake-in-unity/ow-bake-ambient.png)
    [原文链接](https://www.zhihu.com/question/46789782/answer/103172547)

- 祭上守望先锋的场景，很夸张的暗部间接光照，实际上是通过**暗部打烘焙点光**来实现的。更多细节请[参考我的另外一篇文章](/2017/04/06/talk-scene-design)。  
  ![img](/img/in-post/talk-scene-design/ow-shadow.jpg)
    

## AO的使用
- AO能更真实的模拟现实世界，能使暗部有**更明显的立体感**，用美术的话说就是暗部足够“实”，“不飘”
    - 基础知识[请参考这篇文章](https://sassybot.com/blog/lightmapping-in-unity-5/)，这里讲了什么是AO，什么是间接反射等  
    - 暗部的**接缝处**AO效果最明显
    ![img](/img/in-post/talk-bake-in-unity/ao-in-shadow.png)


## LightMap面积的优化
- LightMap面积（精度）说明：（**一个格子就是一个像素点**，也就是占用在lightmap上面的面积）  
    ![img](/img/in-post/talk-bake-in-unity/bak-resolution.jpg)
    
    - 通过**Scale In LightMap**这个参数可以单独调整单个物体的精度  
    ![img](/img/in-post/talk-bake-in-unity/scale-in-lightmap.jpg)
    
- 更合理的分配LightMap面积（想要好效果又要节省lightmap面积，就是**要研究，并总结经验，没有捷径**）
    - 只投射不接受的物件Scale In Lightmap填0就行  
    
    - 地面 > 物件，重要物件 > 一般物件， 视觉中心 > 边远地区，大物件 > 小物件  
    ![img](/img/in-post/talk-bake-in-unity/bak-resolution-2.jpg)
    
    - **全部**（或者几乎全部）在明处或者**全部**在暗处的可以用**最低分辨率**烘焙（比如当前光线下的这个椅子和不管影子多么正都是在暗处的这面墙壁，这种情况下，这两个lightmap精度可以填0.01），需要注意的是必须参加烘焙只是精度可以很低（因为纯白或者纯黑被压缩大小是不会损失精度的）  
    ![img](/img/in-post/talk-bake-in-unity/always-in-shadow.jpg)
    
    - 地面以下，地图的侧面，或者根本看不见的东西，烘焙占用面积请控制到最小（最惨的情况请参考下面说的浪费）
    
- 避免完全没有必要的浪费
    - 像这种**完全在别的物体以下**，还参加烘焙的完全没有必要，而且浪费很大  
    ![img](/img/in-post/talk-bake-in-unity/under-object.jpg)
    
    - 树叶花草等透贴类似的推荐**只投射，不接受**，而且接受烘焙阴影效果不见得好，会很“脏”  
    ![img](/img/in-post/talk-bake-in-unity/only-cast-leaf.jpg)


## 压缩的效果优化
- 通过我烘焙的经验，以kasaierxueyuannew场景为例，发现烘焙10-12张1024压缩到512，比直接烘焙2-3张1024的贴图来的精度和效果都更好
    - 10张512 = 2.5张1024，而以之前的烘焙策略烘焙3-4张1024效果没有我这个好
    - 此外通过合理分配lightmap精度，**能节省2-3张lightmap**，没有仔细分配之前，保证效果的情况下能烘焙14张左右，现在这版只使用了11张，如果还细抠还能省1张甚至更多  
    ![img](/img/in-post/talk-bake-in-unity/test-bake-3.png)
    
- 从1024压缩到512肯定会损失精度，但是通过**仔细的分配lightmap精度**能使这种**损失达到最小**
    - 方法一：**地面最有用**，所以怎么省都**不要吝啬地面的精度**，地面不管接受多少阴影，所占用的lightmap面积是一样的，所以多打点阴影（不增加消耗，还可以做效果，何乐而不为）
    - 方法二：**纯背光**和**纯亮光**区域可以减少lightmap精度，因为压缩不影响（就像纯黑纯白的贴图压缩大小没有损失一样），而**复杂的结构**并且能**同时受到阳光和阴影**的影响，则也不需要节省精度，因为如果本来精度就不高，则压缩更惨
    - 方法三：压缩大小比压缩格式带来的损失小，如果压缩格式影响巨大，可以**不压缩格式**，而在**其他地方想想办法怎么省**（省的办法参考上面）。所以推荐烘焙高质量的光照图来**压大小**。
    - 方法四（重要）：**尽量使用大阴影**，在不压缩情况下本来就很小很虚的阴影，被压缩了只会更惨，优化方法参考以上
    - 方法五：**不推荐**使用**复杂的结构**，酌情使用，在压缩的时候很容易损失过大


## 技巧及问题
- 发现阴影比较虚，不实
    - 检查是否间接光照反弹次数过大（可以理解成有过大的衍射效果）
    - 增加**被投影物体**的大小（比如放大花盆）（很显然）
    - 增加**投影至物体**所占lightmap面积（比如树叶投影到地面比较虚，则提高地面的精度）
    
- 效果不好或者黑点、漏光过多
    - 检查2u是否打开
    - 检查顶点分布是否有异常，uv分布是否均匀或过少
    - 如果都没问题而且这个物件很重要，则增加精度
    - 自定义2u（高级，不推荐使用）
    
- 过小物体效果太差
    - 如果确实过小，先看能不能放大，或者说这么小的东西有没有存在的必要或者是否可替代（很显然）
    - 如果确实需要，可以不参加litmap烘焙，而直接去diffuse贴图上花盆贴图的底部蹭两笔黑的  
    - 这个花盆之前参加烘焙会有很大的漏光和黑点，其实不需要参加烘焙，而且效果比烘焙更好，还能节省lightmap  
    ![img](/img/in-post/talk-bake-in-unity/small-object-no-bake.jpg)
    
    
## 个人经验  
- 暗部补光，感觉上并**不是光越多越好**，最好灯光颜色来表达周围环境的间接光照，过多颜色的灯光会让人觉得没有重点和乱
- 点光通过**减小光照强度**、**增加照明范围**能得到更好的环境间接光的效果，还能防止有比较突兀的亮斑
- 个人倾向于用**天空材质球**来代替全局环境光来烘焙，如果是晴朗天气，用默认纯蓝的天空即可
- （新）白模的情况下感觉lightmap很舒服而且很干净，而最终效果图的lightmap效果没有那么明朗。所以猜测为diffuse贴图的饱和度问题，因此推荐使用**较低饱和度的颜色**，否则lightmap的颜色很容易被盖掉（不保证正确，希望美术同学尝试）
- （新）确定烘焙精度（分辨率）的技巧：可以先确定好**地面保证效果**情况下的**最低精度**，因为地面是最重要并且理论上精度应该是最高的，然后其他重要的，次要的物件相应缩小就行。
- （新）从上面可以看出，阴影面积很重要，于是在设计之时，说服策划，从设计的角度避免太过于空旷没有投影的地面，因为在阳光下很难做效果，而作假投影的方法有一定的局限性。


## 跨平台的问题
- 因为烘焙Lightmap用的exr，也就是HDR颜色编码，而现在手机平台不支持HDR编码，导致在手机平台和PC平台的解码方式不一样，所以不能使用过强的光来烘焙光照图，否则会造成android与pc差异巨大，因此**不推荐使用光照强度超过3**的灯光来渲染。

- （新）美术反应android平台烘不亮的问题：主要原因是材质求颜色太黑了，原理是这样，如果材质求本来亮度是在0.2，在pc上因为支持RGBM编码，
> 最终颜色 = 0.2 \* 颜色贴图的rgb \* lightmap的rgb \* lightmap的a（也就是系数）  

  如果材质求本来很黑，要靠很亮的lightmap才能达到照亮的效果，则会导致lightmap的系数会特别大，比如7-10，但是在android平台上，lightmap的解码方式为
> 最终颜色 = 0.2 \* 颜色贴图rgb \* lightmap的rgb \* 2（这个2是固定的，unity内置的解码）  
  
  所以就会造成android平台特别黑。所以如果要避免这个问题，就是要让材质求颜色亮一些，推荐把没有烘焙lightmap时候的颜色大体定在0.5-0.7左右的亮度，这样烘焙进退都可以，而且这样lightmap的系数不会特别夸张的大，这样在pc平台和android基本就能保持一致。  
    ![img](/img/in-post/talk-bake-in-unity/lightmap-decode.png)  
    
- 如果出现这种lightmap都发白的情况没有颜色了，就说明很有可能有很大的系数值，也更容易导致android比pc显示的更黑。前面是低材质颜色高灯光颜色，后者是高材质颜色，低灯光颜色，最后的效果没什么区别。  
    ![img](/img/in-post/talk-bake-in-unity/lightmap-over-2.png) 
    
    
- （新）另外烘焙的光不要太靠近物体，因为越靠近光强太强，很容易爆掉。在太靠近的位置叠加光也会有相同的问题。比如这里丢失了黄色灯光的颜色就是因为过爆了，就会发白。
    ![img](/img/in-post/talk-bake-in-unity/lightmap-over.png)  

## 演示
- 可以从[此处下载](/attach/demo/test-bake3.rar)演示场景
    - 给一张全貌  
    ![img](/img/in-post/talk-bake-in-unity/all-in-lightmap.png)  
    
    - 这是原来的  
    ![img](/img/in-post/talk-bake-in-unity/origin-lightmap.png)  
    
## 二更
- 今天给另外一个项目调效果，发现大家对天光和间接反射理解的不够深，或者说理解的不一样，确实光照环境确实可以有不同的审美倾向，但还是解释一下天光的使用，可以通过skybox来烘焙，也可以通过环境光来烘焙，但是颜色需要注意，什么样的场景天气就要对应什么样的天光，晴天的时候天光必然是蓝色的，天气不明朗时则根据环境酌情调整，颜色推荐使用粉色，用粉蓝淡蓝粉蓝紫等等  


- 间接光照，引擎是不提供这个，但实际上大家可以想想，间接光可以通过点光来实现，其实上面我已经说了，只要把点光范围扩大，把点光亮度减少就可以了，很好理解的。  

- 剑侠世界的lightmap倾向其实也很夸张的，剑侠的用色确实是好  
    ![img](/img/in-post/talk-bake-in-unity/jianxia-day.png)  
    

- 旧的，用普通的灰度来烘焙的场景  
    ![img](/img/in-post/talk-bake-in-unity/bleach-old.png)  
    
    
- 新的，用更夸张的颜色来烘焙的白天，以模拟自然界的天光，同时加入了比较夸张的红色的间接反射光来得到更大胆的颜色，类似守望先锋花村    
    ![img](/img/in-post/talk-bake-in-unity/bleach-new.png)  
    
## 三更
- 之前一直讲的是白天的lightmap烘焙，说实话，之前之所以没有提到夜晚的lightmap烘焙，确实是因为我对夜晚的光照理解的太浅了，也没有太过仔细的观察过生活。昨天在找是否也有别人有分享过烘焙技巧的时候，找到[一篇帖子](http://tieba.baidu.com/p/2690022869)，然后看到评论下有人说在看[视觉艺术用光](https://book.douban.com/subject/19950884/)，了一眼发现写的很好，一个老外写的，对于白天的光照很多跟我自己刷知乎看守望先锋理解出来的很接近或者说基本是一样的。然后看到晚上和室内的灯光，然后今天看完我又进守望先锋看了一个晚上的地图，然后又参考了一下剑侠世界，算是对夜晚的灯光有点理解了，于是纪录在此。按照我的理解有几个要点或者经验可以分享：  
    - 晚上不管是否有月光，最好给一些微弱的阴影，当然晚上的氛围不用说不管是用方向光给还是通过环境光给都应该偏蓝
    - 对点光的理解，晚上的点光，也就是人工照明，是必须有明显的衰减的，这时候就跟白天使用点光当作间接照明的情况不一样了
    - 同样，晚上也有需要通过点光来补充间接照明的地方，虽然不多。同时，面积光，比如商店招牌等等得恰当的使用区域光烘焙
    - 还有一点就是**点光阴影**的使用，哪些光应该产生阴影，这个在以前美术的使用中感觉很容易忽略，塑造阴影是做效果非常重要的办法
    - 另外一点，完全是从守望先锋过来的经验，也就是，**不能出现无源头的光照**，因为人会脑补，如果没有光源会觉得不自然
    - 当然还有一些其他的技巧，比如做假贴片，自发光等等技巧，因为不属于lightmap的范畴就不细说了  

- 先看守望先锋和剑侠世界是怎么处理的   
    
    ![img](/img/in-post/talk-bake-in-unity/jianxia-night.png)   
    
    ![img](/img/in-post/talk-bake-in-unity/ow-night.png)  
    
- 参考这两种方式烘焙的效果  
    
    ![img](/img/in-post/talk-bake-in-unity/bleach-night.png)  
    
    
## 四更
- 本来觉得应该写的差不多了，不太可能更新了，但是今天试了一下自己展2u，真的太出乎意外了。之前我自己试的时候因为限于不会展uv，虽然知道展2u效果会好很多，但是没有尝试，也觉得这个对于美术工作量太大，所以没有太放在心上。后来挂在gad上的文章后面有人留言说2u烘焙的事情（[详见文章评论8楼](http://gad.qq.com/article/detail/33013)），再后来一个完美前同事问我问题，也说他们自己展2u，我效果目测确实好很多，于是今天正好跟美术聊说要不试一下，没想到试一下效果真是比我想象中太好了，另外，经我测试，Unity里对于展2u和不展2u的物体烘焙是可以混用的，所以整体说来一些比较平整结构的东西就直接用Unity自己展2u，一些复杂结构和特殊结构（直角、环形、细碎）才自己展2u，这样工作量不会翻太大，这确实是今天的Suprise。

- 放上测试图  

    ![img](/img/in-post/talk-bake-in-unity/testbake-2u.png)  
    同时还是无奈的表示TA有多重要，要是我展uv顺手拈来，可能第一次我测试lightmap的时候就用了。

    
    
## 题外的感悟
- 记得小时候没有报书法班完全靠兴趣来写毛笔字，起初都是用几块钱的毛笔来写，写不好总会怀疑是不是笔的问题，后来换了30，40的笔感觉会好一些但好的不多，后来看到我三外公用钝头的毛笔写出来的字都很好看（虽然达不到他最高水平，但是笔意还在），后来跌跌撞撞对笔锋，行笔有了更好的理解，发现重新拿原来最开始的几块钱的毛笔都写的不错。  
- 还有比如我高中那会开始玩跑跑卡丁车的时候，刚上来就买了一个好几十的高级车玩，但是在游戏中被一些老手用板车（自带的新手车）碾压（因为根本不会过弯道，要不撞墙，要不减速过多，要不走的不是最佳的漂移路线）。所以**好不好用**与**会不会用**完全是两回事。不要轻易的因为后者而怪前者。这种例子不胜枚举。世界上的大道理基本都是相通的。**多思考，多琢磨**，这是一种品质。
    